version: '3.8'

services:
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: email_scheduler
    ports:
      - "3306:3306"
    # Named volume for data persistence (optional but recommended)
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  flask:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - MYSQL_URL=mysql://root:root@db:3306/email_scheduler  # Use service name
      - REDIS_URL=redis://redis:6379                       # Use service name
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_LOGIN=${SMTP_LOGIN}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - db
      - redis

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery.worker
    environment:
      - MYSQL_URL=mysql://root:root@db:3306/email_scheduler  # Use service name
      - REDIS_URL=redis://redis:6379                       # Use service name
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_LOGIN=${SMTP_LOGIN}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - db
      - redis

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.celery.beat
    environment:
      - MYSQL_URL=mysql://root:root@db:3306/email_scheduler  # Use service name
      - REDIS_URL=redis://redis:6379                       # Use service name
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_LOGIN=${SMTP_LOGIN}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - db
      - redis

# Named volume definition (optional but recommended)
volumes:
  mysql_data:
